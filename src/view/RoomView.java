/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.RoomCategoryController;
import controller.RoomController;
import dto.RoomCategoryDto;
import dto.RoomDto;
import entity.RoomEntity;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nushan Vandabona
 */
public class RoomView extends javax.swing.JFrame {

    private RoomController roomController;
    private RoomCategoryController roomCategoryController;

    /**
     * Creates new form RoomView
     */
    public RoomView() {
        roomController = new RoomController();
        roomCategoryController = new RoomCategoryController();
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        initializeRoomStatusComboBox();
        loadRooms();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        txtRoomNumber = new javax.swing.JTextField();
        txtCategoryId = new javax.swing.JTextField();
        lblRoomCategory = new javax.swing.JLabel();
        lblRoomStatus = new javax.swing.JLabel();
        lblRoomNumber = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnSearchRoomCategory = new javax.swing.JButton();
        lblCategoryData = new javax.swing.JLabel();
        cmbRoomStatus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoom);

        txtRoomNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCategoryId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblRoomCategory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRoomCategory.setText("Category ID");

        lblRoomStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRoomStatus.setText("Room Status");

        lblRoomNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRoomNumber.setText("Room Number");

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Room");

        btnSearchRoomCategory.setText("Search");
        btnSearchRoomCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomCategoryActionPerformed(evt);
            }
        });

        cmbRoomStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbRoomStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblRoomStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRoomNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRoomCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCategoryId)
                            .addComponent(cmbRoomStatus, 0, 221, Short.MAX_VALUE)
                            .addComponent(txtRoomNumber, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearchRoomCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCategoryData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoomNumber)
                    .addComponent(txtRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRoomCategory)
                        .addComponent(txtCategoryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchRoomCategory))
                    .addComponent(lblCategoryData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoomStatus)
                    .addComponent(cmbRoomStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveRoom();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateRoom();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteRoom();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchRoomCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRoomCategoryActionPerformed
        searchRoomCategory();
    }//GEN-LAST:event_btnSearchRoomCategoryActionPerformed

    private void tblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomMouseClicked
        searchRoom();
    }//GEN-LAST:event_tblRoomMouseClicked

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RoomView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchRoomCategory;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbRoomStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategoryData;
    private javax.swing.JLabel lblRoomCategory;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel lblRoomStatus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtCategoryId;
    private javax.swing.JTextField txtRoomNumber;
    // End of variables declaration//GEN-END:variables

    private void initializeRoomStatusComboBox() {
        cmbRoomStatus.setModel(new DefaultComboBoxModel<>());
        for (RoomEntity.RoomStatus status : RoomEntity.RoomStatus.values()) {
            cmbRoomStatus.addItem(status.toString());
        }
    }

    private void loadRooms() {
        try {
            String[] columns = {"Room ID", "Room Number", "Room Status", "Category ID"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            tblRoom.setModel(dtm);

            List<RoomDto> roomDtos = roomController.getAll();
            for (RoomDto roomDto : roomDtos) {
                Object[] rowData = {roomDto.getRoomId(), roomDto.getRoomNumber(), roomDto.getStatus(), roomDto.getCategoryId()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void searchRoomCategory() {
        try {
            Integer categoryId = Integer.parseInt(txtCategoryId.getText());
            RoomCategoryDto roomCategoryDto = roomCategoryController.getRoomCategory(categoryId);
            if (roomCategoryDto != null) {
                lblCategoryData.setText(roomCategoryDto.getCategoryName() + " | " + roomCategoryDto.getBasePrice());
            } else {
                JOptionPane.showMessageDialog(this, "Room Category Not Found");
            }
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchRoom() {
        Integer roomId = (Integer) tblRoom.getValueAt(tblRoom.getSelectedRow(), 0);
        try {
            RoomDto roomDto = roomController.getRoom(roomId);
            if (roomDto != null) {
                txtRoomNumber.setText(roomDto.getRoomNumber());
                cmbRoomStatus.setSelectedItem(roomDto.getStatus().toString());
                txtCategoryId.setText(Integer.toString(roomDto.getCategoryId()));
            } else {
                JOptionPane.showMessageDialog(this, "Room Not Found");
            }
        } catch (Exception e) {
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void clear() {
        txtRoomNumber.setText("");
        txtCategoryId.setText("");
        cmbRoomStatus.setSelectedItem("");
    }

    private void saveRoom() {
        try {
            String roomNumber = txtRoomNumber.getText();
            RoomEntity.RoomStatus roomStatus = RoomEntity.RoomStatus.valueOf(cmbRoomStatus.getSelectedItem().toString());
            Integer categoryId = Integer.parseInt(txtCategoryId.getText());

            RoomDto roomDto = new RoomDto(roomNumber, roomStatus, categoryId);
            String resp = roomController.saveRoom(roomDto);
            JOptionPane.showMessageDialog(this, resp);
            loadRooms();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void updateRoom() {
        Integer roomId = (Integer) tblRoom.getValueAt(tblRoom.getSelectedRow(), 0);

        try {
            String roomNumber = txtRoomNumber.getText();
            RoomEntity.RoomStatus roomStatus = RoomEntity.RoomStatus.valueOf(cmbRoomStatus.getSelectedItem().toString());
            Integer categoryId = Integer.parseInt(txtCategoryId.getText());

            RoomDto roomDto = new RoomDto(roomId, roomNumber, roomStatus, categoryId);
            String resp = roomController.updateRoom(roomDto);
            JOptionPane.showMessageDialog(this, resp);
            loadRooms();
            clear();
        } catch (Exception ex) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void deleteRoom() {
        try {
            Integer roomId = (Integer) tblRoom.getValueAt(tblRoom.getSelectedRow(), 0);
            String resp = roomController.deleteRoom(roomId);
            JOptionPane.showMessageDialog(this, resp);
            loadRooms();
            clear();
        } catch (Exception e) {
            Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

}
